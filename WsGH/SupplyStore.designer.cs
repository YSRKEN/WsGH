#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WsGH
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SupplyStore")]
	public partial class SupplyStoreDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 拡張メソッドの定義
    partial void OnCreated();
    partial void InsertMainSupplyTable(MainSupplyTable instance);
    partial void UpdateMainSupplyTable(MainSupplyTable instance);
    partial void DeleteMainSupplyTable(MainSupplyTable instance);
    partial void InsertSubSupplyTable(SubSupplyTable instance);
    partial void UpdateSubSupplyTable(SubSupplyTable instance);
    partial void DeleteSubSupplyTable(SubSupplyTable instance);
    #endregion
		
		public SupplyStoreDataContext() : 
				base(global::WsGH.Properties.Settings.Default.SupplyStoreConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SupplyStoreDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SupplyStoreDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SupplyStoreDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SupplyStoreDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MainSupplyTable> MainSupplyTable
		{
			get
			{
				return this.GetTable<MainSupplyTable>();
			}
		}
		
		public System.Data.Linq.Table<SubSupplyTable> SubSupplyTable
		{
			get
			{
				return this.GetTable<SubSupplyTable>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MainSupplyTable")]
	public partial class MainSupplyTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _DateTime;
		
		private int _Fuel;
		
		private int _Ammo;
		
		private int _Steel;
		
		private int _Bauxite;
		
		private int _Diamond;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnFuelChanging(int value);
    partial void OnFuelChanged();
    partial void OnAmmoChanging(int value);
    partial void OnAmmoChanged();
    partial void OnSteelChanging(int value);
    partial void OnSteelChanged();
    partial void OnBauxiteChanging(int value);
    partial void OnBauxiteChanged();
    partial void OnDiamondChanging(int value);
    partial void OnDiamondChanged();
    #endregion
		
		public MainSupplyTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fuel", DbType="Int NOT NULL")]
		public int Fuel
		{
			get
			{
				return this._Fuel;
			}
			set
			{
				if ((this._Fuel != value))
				{
					this.OnFuelChanging(value);
					this.SendPropertyChanging();
					this._Fuel = value;
					this.SendPropertyChanged("Fuel");
					this.OnFuelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ammo", DbType="Int NOT NULL")]
		public int Ammo
		{
			get
			{
				return this._Ammo;
			}
			set
			{
				if ((this._Ammo != value))
				{
					this.OnAmmoChanging(value);
					this.SendPropertyChanging();
					this._Ammo = value;
					this.SendPropertyChanged("Ammo");
					this.OnAmmoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Steel", DbType="Int NOT NULL")]
		public int Steel
		{
			get
			{
				return this._Steel;
			}
			set
			{
				if ((this._Steel != value))
				{
					this.OnSteelChanging(value);
					this.SendPropertyChanging();
					this._Steel = value;
					this.SendPropertyChanged("Steel");
					this.OnSteelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bauxite", DbType="Int NOT NULL")]
		public int Bauxite
		{
			get
			{
				return this._Bauxite;
			}
			set
			{
				if ((this._Bauxite != value))
				{
					this.OnBauxiteChanging(value);
					this.SendPropertyChanging();
					this._Bauxite = value;
					this.SendPropertyChanged("Bauxite");
					this.OnBauxiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diamond", DbType="Int NOT NULL")]
		public int Diamond
		{
			get
			{
				return this._Diamond;
			}
			set
			{
				if ((this._Diamond != value))
				{
					this.OnDiamondChanging(value);
					this.SendPropertyChanging();
					this._Diamond = value;
					this.SendPropertyChanged("Diamond");
					this.OnDiamondChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubSupplyTable")]
	public partial class SubSupplyTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _DateTime;
		
		private int _Bucket;
		
		private int _Burner;
		
		private int _ShipDrawing;
		
		private int _WeaponDrawing;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnBucketChanging(int value);
    partial void OnBucketChanged();
    partial void OnBurnerChanging(int value);
    partial void OnBurnerChanged();
    partial void OnShipDrawingChanging(int value);
    partial void OnShipDrawingChanged();
    partial void OnWeaponDrawingChanging(int value);
    partial void OnWeaponDrawingChanged();
    #endregion
		
		public SubSupplyTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bucket", DbType="Int NOT NULL")]
		public int Bucket
		{
			get
			{
				return this._Bucket;
			}
			set
			{
				if ((this._Bucket != value))
				{
					this.OnBucketChanging(value);
					this.SendPropertyChanging();
					this._Bucket = value;
					this.SendPropertyChanged("Bucket");
					this.OnBucketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Burner", DbType="Int NOT NULL")]
		public int Burner
		{
			get
			{
				return this._Burner;
			}
			set
			{
				if ((this._Burner != value))
				{
					this.OnBurnerChanging(value);
					this.SendPropertyChanging();
					this._Burner = value;
					this.SendPropertyChanged("Burner");
					this.OnBurnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipDrawing", DbType="Int NOT NULL")]
		public int ShipDrawing
		{
			get
			{
				return this._ShipDrawing;
			}
			set
			{
				if ((this._ShipDrawing != value))
				{
					this.OnShipDrawingChanging(value);
					this.SendPropertyChanging();
					this._ShipDrawing = value;
					this.SendPropertyChanged("ShipDrawing");
					this.OnShipDrawingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeaponDrawing", DbType="Int NOT NULL")]
		public int WeaponDrawing
		{
			get
			{
				return this._WeaponDrawing;
			}
			set
			{
				if ((this._WeaponDrawing != value))
				{
					this.OnWeaponDrawingChanging(value);
					this.SendPropertyChanging();
					this._WeaponDrawing = value;
					this.SendPropertyChanged("WeaponDrawing");
					this.OnWeaponDrawingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
